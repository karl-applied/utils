#!/bin/bash

set -euo pipefail

CACHE_PATH="$(dirname "${BASH_SOURCE[0]}")/ln-cache$(pwd)"
echo "Caching link paths in \"$CACHE_PATH\"."
mkdir -p "$(dirname "$CACHE_PATH")"
touch "$CACHE_PATH"
true > "$CACHE_PATH"

BAZEL_BIN="bazel-bin/"
GO_FILES=$(find $BAZEL_BIN | grep -E '\.go$')
MODULE_NAME=$(grep module go.mod | awk '{print $2}')

GO_FILES=$(echo "$GO_FILES" | grep -v "${BAZEL_BIN}external")

echo "Found the following Go files:"
echo "$GO_FILES"

for GO_FILE in $GO_FILES
do
    echo "Checking whether $GO_FILE is generated..."

    if head -n 1 "$GO_FILE" | grep -q -E '// Code generated by .+\. DO NOT EDIT\.'
    then
        echo "$GO_FILE is generated."

        if echo "$GO_FILE" | grep -b -o "$MODULE_NAME"
        then
            TARGET_PATH="${GO_FILE:$(echo "$GO_FILE" | grep -b -o "$MODULE_NAME" | cut -d: -f1 | tail -n 1)}"
            TARGET_PATH="$(echo "$TARGET_PATH" | tail -c +$((${#MODULE_NAME}+2)))"
        else
            TARGET_PATH="$(echo "$GO_FILE" | tail -c +$((${#BAZEL_BIN}+1)))"
        fi

        echo "TARGET_PATH=$TARGET_PATH"

        GO_FILE_RELPATH=$(relpath "$(dirname "$TARGET_PATH")" "$(dirname "$GO_FILE")")
        if mkdir -p "$(dirname "$TARGET_PATH")" && ln -s "$GO_FILE_RELPATH" "$TARGET_PATH"
        then
            echo "$TARGET_PATH" >> "$CACHE_PATH"
            echo "Linked $TARGET_PATH to $GO_FILE_RELPATH."
        else
            echo "Failed to link $TARGET_PATH to $GO_FILE_RELPATH."
        fi
    fi
done